#!/bin/bash

TOOLNAME=ciocc
INIT_ARGS="$@"

SEEN_C_FLAG=0
SEEN_O_FLAG=0
OPT_FLAG="" # llc defaults to O2

C_FILE=""
OBJ_FILE=""
ASM_FILE=""
LL_FILE=""
MIR_FILE=""
LL_FILE=


COMPILER_DIR="/home/mkf/llvm-project/build/bin/"
COMPILER="$COMPILER_DIR/clang"
LLC="$COMPILER_DIR/llc"
LLVM_MC="$COMPILER_DIR/llvm-mc"

FINAL_ARGS=()

while [[ $# -gt 0 ]]; do
    if [[ ! ("$1" =~ 'PACKAGE_STRING') ]]; then
	FINAL_ARGS+=( "$1" )
    fi
    
    case "$1" in
	'-o')
	    SEEN_O_FLAG=1
	    OBJ_FILE="$2"
	    LL_FILE=${OBJ_FILE/%.o/.ll}
	    LL_FILE=${LL_FILE/%.lo/.ll}
	    MIR_FILE=${OBJ_FILE/%.o/.mir}
	    MIR_FILE=${MIR_FILE/%.lo/.mir}
	    ASM_FILE=${OBJ_FILE/%.o/.s}
	    ASM_FILE=${ASM_FILE/%.lo/.s}

	    # libtool/autotools used?
	    LL_FILE=${LL_FILE/.libs/}
	    MIR_FILE=${MIR_FILE/.libs/}
	    ASM_FILE=${ASM_FILE/.libs/}
	    
	    # if [[ "$OBJ_FILE" =~ '\.libs' ]]; then
	    # 	echo "has .libs"
	    # 	LL_FILE=${LL_FILE/.libs/}
	    # 	MIR_FILE=${MIR_FILE/.libs/}
	    # 	ASM_FILE=${ASM_FILE/.libs/}
	    # else
	    # 	echo "doesn't have .libs"
	    # fi
	    FINAL_ARGS+=( "$LL_FILE" )
	    shift 2
	    continue
	    ;;
	'-c')
	    if [[ "$2" =~ '.*\.(c|cpp)' ]]; then
		SEEN_C_FLAG=1
		C_FILE="$2"
		FINAL_ARGS+=( "$2" )
		shift 2
	    else
		shift
	    fi
	    continue
	    ;;
	'-O0' | '-O1' | '-O2' | '-O3' | '-Ofast')
	    OPT_FLAG=$1
	    FINAL_ARGS+=( "-emit-llvm" )
	    # echo "Opt level is: $OPT_FLAG"
	    shift
	    continue
	    ;;
	*)
	    shift
	    continue
	    ;;
    esac
    shift
done

# echo Num final args: "${#FINAL_ARGS[@]}"
# echo Final args are: "${FINAL_ARGS[@]}"

# take the same CL flags, add -emit-llvm to it, change '-o file.o' to '-o file.ll'
# run 'llc $OPT_FLAG file.ll -o file.mir'
# run 'llc file.mir -o file.o'
if [[ SEEN_C_FLAG && SEEN_O_FLAG ]]; then
    if [[ -z "$LL_FILE" || -z "$OBJ_FILE" || -z "$MIR_FILE" ]]; then
	echo "Error getting .ll/.mir file name for command: $@, OBJ_FILE=$OBJ_FILE"
	exit 1
    fi
    
    # Make doesn't properly handle our intermediate build artifacts
    # Build them clean from scratch every time
    test -e "$LL_FILE" && rm "$LL_FILE"
    test -e "$MIR_FILE" && rm "$MIR_FILE"
    test -e "$ASM_FILE" && rm "$ASM_FILE"

    echo "$COMPILER ${FINAL_ARGS[@]}"
    $COMPILER "${FINAL_ARGS[@]}"
    echo "$LLC $OPT_FLAG $LL_FILE -o $MIR_FILE"
    $LLC $OPT_FLAG $LL_FILE -o $MIR_FILE >/dev/null
    echo "$LLC $OPT_FLAG $LL_FILE -o $ASM_FILE"
    $LLC $OPT_FLAG $LL_FILE -o $ASM_FILE >/dev/null

    echo "$LLVM_MC $ASM_FILE -filetype=obj -o $OBJ_FILE"
    $LLVM_MC $ASM_FILE -filetype=obj -o $OBJ_FILE
else
    # then probably linking or assembling, just pass the arguments through
    echo "LINKING OR ASSEMBLING:"
    echo "$COMPILER $@"
    $COMPILER "$@"
fi

exit 0
